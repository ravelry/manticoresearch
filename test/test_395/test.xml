<?xml version="1.0" encoding="utf-8"?>
<test>
<name>multi-queries and facet multipiler</name>

<requires><variant_match /></requires>  

<config>
searchd
{
	<searchd_settings/>
	<dynamic>
	  <variant>
		  max_threads_per_query = 1
	  </variant>
	  <variant>
		  max_threads_per_query = 4
	  </variant>
	</dynamic>	
}

index facetdemo
{
	type              = rt
	path              = <data_path/>/facetdemo
	rt_field          = title
	rt_field          = property
	rt_attr_string    = title
	rt_attr_string    = brand_name
	rt_attr_string    = property
	rt_attr_multi     = categories
	rt_attr_uint      = price
	rt_attr_uint      = brand_id
	rt_attr_json      = j
}

index facetdemo2
{
	source            = src
	path              = <data_path/>/facets
}

source src
{
	type              = mysql
	<sql_settings/>
	sql_query         = SELECT * FROM test_table
	sql_attr_uint     = price
	sql_attr_uint     = brand_id
	sql_field_string  = title
	sql_attr_string   = brand_name
	sql_field_string  = property
	sql_attr_multi    = uint categories from field
	sql_attr_json     = j
}

index dist0
{
	type              = distributed
	local             = facetdemo
	local             = facetdemo2
}


</config>

<db_create>
CREATE TABLE `test_table` (
  `id` int(11),
  `price` int(11),
  `brand_id` int(11),
  `title` varchar(255),
  `brand_name` varchar(255),
  `property` varchar(255),
  `categories` varchar(255),
  `j` varchar(255)
);
</db_create>

<db_drop>DROP TABLE IF EXISTS `test_table`;</db_drop>

<db_insert>
insert into test_table (id,price,brand_id,title,brand_name,property,categories,j) values
(1001,529,9,'Product Five Two','Brand Nine','Four','(13,14)','{x:[13,14],a:["a13","a14"]}'),
(1002,173,10,'Product Five Seven','Brand Ten','Four','(10)','{x:[10],a:["a10"]}'),
(1003,121,1,'Product Seven Nine','Brand One','Five','(13,14,15)','{x:[13,14,15],a:["a13","a14","a15"]}'),
(1004,474,7,'Product Ten Three','Brand Seven','Nine','(10,11,12)','{x:[10,11,12],a:["a10","a11","a12"]}'),
(1005,20,7,'Product Ten Four','Brand Seven','Seven','(13)','{x:[13],a:["a13"]}'),
(1006,100,3,'Product One Three','Brand Three','Seven','(10)','{x:[10],a:["a10"]}'),
(1007,724,9,'Product Four Eight','Brand Nine','Five','(11,12,13)','{x:[11,12,13],a:["a11","a12","a13"]}'),
(1008,13,3,'Product Seven One','Brand Three','Eight','(12,13,14)','{x:[12,13,14],a:["a12","a13","a14"]}'),
(1009,54,2,'Product Ten Seven','Brand Two','Eight','(11)','{x:[11],a:["a11"]}'),
(1010,986,6,'Product Six Ten','Brand Six','Eight','(12,13,14)','{x:[12,13,14],a:["a12","a13","a14"]}'),
(1011,100,10,'Product One Ten','Brand Ten','Four','(11)','{x:[11],a:["a11"]}'),
(1012,69,10,'Product Five Seven','Brand Ten','Two','(12,13,14)','{x:[12,13,14],a:["a12","a13","a14"]}'),
(1013,365,4,'Product Two Nine','Brand Four','Ten','(10,11,12)','{x:[10,11,12],a:["a10","a11","a12"]}'),
(1014,455,1,'Product Two Eight','Brand One','Nine','(13,14,15)','{x:[13,14,15],a:["a13","a14","a15"]}'),
(1015,718,4,'Product Nine Two','Brand Four','Eight','(10)','{x:[10],a:["a10"]}'),
(1016,758,9,'Product Eight Ten','Brand Nine','Seven','(13)','{x:[13],a:["a13"]}'),
(1017,493,4,'Product Nine Six','Brand Four','Five','(11,12)','{x:[11,12],a:["a11","a12"]}'),
(1018,413,3,'Product Eight Five','Brand Three','Four','(11,12,13)','{x:[11,12,13],a:["a11","a12","a13"]}'),
(1019,78,4,'Product Six Five','Brand Four','Two','(12)','{x:[12],a:["a12"]}'),
(1020,169,4,'Product Seven Six','Brand Four','Eight','(10,11)','{x:[10,11],a:["a10","a11"]}')
</db_insert>

<sphqueries>

<sphinxql>
insert into facetdemo (id,price,brand_id,title,brand_name,property,categories,j) values
(1,529,9,'Product Five Two','Brand Nine','Four',(13,14),'{x:[13,14],a:["a13","a14"]}'),
(2,173,10,'Product Five Seven','Brand Ten','Four',(10),'{x:[10],a:["a10"]}'),
(3,121,1,'Product Seven Nine','Brand One','Five',(13,14,15),'{x:[13,14,15],a:["a13","a14","a15"]}'),
(4,474,7,'Product Ten Three','Brand Seven','Nine',(10,11,12),'{x:[10,11,12],a:["a10","a11","a12"]}'),
(5,20,7,'Product Ten Four','Brand Seven','Seven',(13),'{x:[13],a:["a13"]}'),
(6,100,3,'Product One Three','Brand Three','Seven',(10),'{x:[10],a:["a10"]}'),
(7,724,9,'Product Four Eight','Brand Nine','Five',(11,12,13),'{x:[11,12,13],a:["a11","a12","a13"]}'),
(8,13,3,'Product Seven One','Brand Three','Eight',(12,13,14),'{x:[12,13,14],a:["a12","a13","a14"]}'),
(9,54,2,'Product Ten Seven','Brand Two','Eight',(11),'{x:[11],a:["a11"]}'),
(10,986,6,'Product Six Ten','Brand Six','Eight',(12,13,14),'{x:[12,13,14],a:["a12","a13","a14"]}'),
(11,100,10,'Product One Ten','Brand Ten','Four',(11),'{x:[11],a:["a11"]}'),
(12,69,10,'Product Five Seven','Brand Ten','Two',(12,13,14),'{x:[12,13,14],a:["a12","a13","a14"]}'),
(13,365,4,'Product Two Nine','Brand Four','Ten',(10,11,12),'{x:[10,11,12],a:["a10","a11","a12"]}'),
(14,455,1,'Product Two Eight','Brand One','Nine',(13,14,15),'{x:[13,14,15],a:["a13","a14","a15"]}'),
(15,718,4,'Product Nine Two','Brand Four','Eight',(10),'{x:[10],a:["a10"]}'),
(16,758,9,'Product Eight Ten','Brand Nine','Seven',(13),'{x:[13],a:["a13"]}'),
(17,493,4,'Product Nine Six','Brand Four','Five',(11,12),'{x:[11,12],a:["a11","a12"]}'),
(18,413,3,'Product Eight Five','Brand Three','Four',(11,12,13),'{x:[11,12,13],a:["a11","a12","a13"]}'),
(19,78,4,'Product Six Five','Brand Four','Two',(12),'{x:[12],a:["a12"]}'),
(20,169,4,'Product Seven Six','Brand Four','Eight',(10,11),'{x:[10,11],a:["a10","a11"]}')
</sphinxql>


<sphinxql>select * from facetdemo where match ('one') limit 0,15 facet brand_name order by facet() asc facet interval(price,200,400,600,800) order by facet() asc;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>
<sphinxql>select * from facetdemo where match ('one') limit 0,15 facet brand_id order by facet() asc facet interval(price,200,400,600,800) order by facet() asc;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>

<sphinxql>select id, crc32(brand_name) as crc from facetdemo facet brand_name order by facet() asc facet interval(price,200,400,600,800) order by facet() asc;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>

<sphinxql>select id, brand_name, brand_id, crc32(brand_name) as crc from facetdemo group by brand_name; select id, brand_name, brand_id, crc32(brand_name) as crc, interval(price,200,400,600,800) as i from facetdemo group by i;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>

<sphinxql>select id, brand_name, brand_id, crc32(brand_name) as crc, interval(price,200,400,600,800) as i from facetdemo group by brand_name; select id, brand_name, brand_id, crc32(brand_name) as crc, interval(price,200,400,600,800) as i from facetdemo group by i;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>

<sphinxql>select id, crc32(brand_name) as crc from dist0 order by id asc facet brand_name order by facet() asc facet interval(price,200,400,600,800) order by facet() asc;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>
<sphinxql>select id, brand_name, brand_id, crc32(brand_name) as crc, interval(price,200,400,600,800) as i from dist0 group by brand_name within group order by id asc; select id, brand_name, brand_id, crc32(brand_name) as crc, interval(price,200,400,600,800) as i from dist0 group by i within group order by id asc;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>

<sphinxql>select id, crc32(brand_name) as crc from facetdemo facet brand_name order by facet() asc facet j.x order by facet() asc;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>
<sphinxql>select id, brand_name, brand_id, crc32(brand_name) as crc, j.x as i from facetdemo group by brand_name; select id, brand_name, brand_id, crc32(brand_name) as crc, j.x as i from facetdemo group by i;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>
<sphinxql>select id, crc32(brand_name) as crc from dist0 order by id asc facet brand_name order by facet() asc facet j.x order by facet() asc;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>
<sphinxql>select id, brand_name, brand_id, crc32(brand_name) as crc, j.x as i from dist0 group by brand_name; select id, brand_name, brand_id, crc32(brand_name) as crc, j.x as i from dist0 group by i;</sphinxql>
<sphinxql>show meta like 'multiplier'</sphinxql>


</sphqueries>

</test>
