<?xml version="1.0" encoding="utf-8"?>
<test>

<name>configless</name>

<requires>
	<icu/>
	<force-rt/>
</requires>

<skip_indexer/>

<config>
searchd
{
	<searchd_Settings/>
	data_dir = <data_path path="data0"/>
}
</config>

<queries>
<sphinxql example="test configless">
	show tables;
	create table test1 ( title text, tag integer );
	create table test1 ( title text, tag integer, tag2 integer );
	create table if not exists test1 ( title text, tag integer, tag2 integer );
	show tables;

	<!-- testing configless -->
	desc test1;
	insert into test1 values (1,'hello',100);
	insert into test1 values (2,'world',200);
	select * from test1 where match('hello|world');
	show create table test1;
	drop table test1;
	show tables;
</sphinxql>
<sphinxql>

	drop table test1;
	drop table if exists test1;

	create table test2 ( title text indexed, body text stored indexed, tag integer, weight float, flags bit(2) );
	desc test2;
	show create table test2;
	insert into test2 values (1,'title','body',100, 1.1, 1);
	select * from test2;
	drop table test2;

	create table if not exists test3 ( title text, tag integer ) stored_fields='title';
	create table if not exists test3 ( title text, tag integer );
	insert into test3 values (1,'walked',100);
	call keywords ('walked', 'test3');
	select * from test3 where match('walk');
	drop table test3;

	create table test4 ( title text, tag integer ) morphology='stem_en';
	insert into test4 values (1,'walked',100);
	call keywords ('walked', 'test4');
	select * from test4 where match('walk');
	show create table test4;
	drop table test4;

	create table test5 ( field1 text indexed, field2 text stored, field3 text stored indexed );
	desc test5;
	show create table test5;
	insert into test5 values (1,'indexed1','stored2','stored3 indexed3');
	select * from test5 where match('indexed1');
	select * from test5 where match('stored2');
	select * from test5 where match('indexed3');
	drop table test5;

	create table pq1 ( title text ) type='pq';
	show tables;
	insert into pq1 (query) values('test');
	insert into pq1 (query) values( 'test | cat' );
	call pq ('pq1', 'test 1', 1 as docs, 0 as docs_json );
	show status like 'command_clusterpq';

	drop table pq1;

	show tables;
	create table idx(f text) morphology='icu_chinese' charset_table='non-cjk,cjk';
	show tables;
	create table idx(f text) morphology='icu_chinese' charset_table='non_cjk,cjk';
	show tables;
	show create table idx;
	create table idx_clone like idx;
	show create table idx_clone;
	drop table idx_clone;
	drop table idx;

	create table test1 ( title text ) docstore_compression='lz4hc' docstore_block_size='8192' access_plain_attrs='mmap' attr_update_reserve='100M';
	show create table test1;
	create table test2 like test1;
	show create table test2;
	drop table test1;
	drop table test2;

	create table pq1 ( title text ) type='pq';
	show create table pq1;
	create table pq2 like pq1;
	show create table pq2;
	drop table pq1;
	drop table pq2;

	create table test1(title text, price float) charset_table = '0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+451, U+451';
	show create table test1;
	drop table test1;

	create table test1(title string indexed);
	show create table test1;
	drop table test1;

	create table test1(title text, str_val string attribute);
	show create table test1;
	drop table test1;

	create table test1(title string attribute indexed);
	show create table test1;
	desc test1;
	insert into test1 values(1,'title','title');
	select * from test1 where match('title');
	drop table test1;

	create table test1(title string attribute stored);
	create table test2(title string attribute indexed stored);
	drop table if exists test1;
	drop table if exists test2;

<!-- regression percolate index column names -->
create table pq2 (f text, Abc int) type='percolate';
insert into pq2 (filters) values('Abc > 5');
select * from pq2;
call pq ('pq2', '{"Abc":10}');
call pq ('pq2', '{"abc":10}');
drop table pq2;
</sphinxql>
</queries>

</test>